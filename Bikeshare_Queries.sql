-- Find the average duration of trips per member type
WITH AVERAGE_DUR AS
(
SELECT r.MEMBER_TYPE, AVG(t.DURATION_SECONDS) AS AVG_DURATION
FROM TRIP t
JOIN RIDER r
ON r.RIDER_ID = t.RIDER_ID
GROUP BY r.MEMBER_TYPE
)
SELECT MEMBER_TYPE, AVG_DURATION 
FROM AVERAGE_DUR;

-- Find the top 3 stations with the most departures per city
WITH TRIPS_NUM AS
(
SELECT s.CITY, s.NAME, COUNT(t.START_STATION_ID) AS NUM_TRIPS,
RANK() OVER(PARTITION BY s.CITY ORDER BY COUNT(t.START_STATION_ID) DESC) AS rn
FROM TRIP t
JOIN STATIONS s
ON t.START_STATION_ID = s.STATION_ID
GROUP BY s.CITY, t.START_STATION_ID
)
SELECT CITY, NAME, NUM_TRIPS
FROM TRIPS_NUM
WHERE rn <=3;

-- Find bikes with more than 100 total rides
WITH TRIPS_NUMBER AS
(
SELECT t.BIKE_ID, COUNT(t.TRIP_ID) AS NUM_TRIPS
FROM TRIP t
GROUP BY t.BIKE_ID
)
SELECT BIKE_ID, NUM_TRIPS
FROM TRIPS_NUMBER
WHERE NUM_TRIPS >100;

-- Find the average trip duration for each city
WITH TRIP_DURATION AS
(
SELECT s.CITY, AVG(t.DURATION_SECONDS) AS CITY_DURATION
FROM TRIP t
JOIN STATIONS s
ON s.STATION_ID = t.START_STATION_ID
GROUP BY s.CITY
)
SELECT CITY, CITY_DURATION
FROM TRIP_DURATION;

-- Find the top 5 riders with the highest total duration of trips
WITH RIDERS_DURATION AS
(
SELECT r.RIDER_ID, SUM(t.DURATION_SECONDS) AS TOTAL_DURATION,
RANK() OVER(ORDER BY SUM(t.DURATION_SECONDS) DESC) AS rd
FROM TRIP t
JOIN RIDER r
ON r.RIDER_ID = t.RIDER_ID
GROUP BY r.RIDER_ID
)
SELECT RIDER_ID, TOTAL_DURATION
FROM RIDERS_DURATION
WHERE rd <= 5;

-- Find for each member type the average riders age
WITH MT_AGE AS
(
SELECT MEMBER_TYPE, (YEAR(current_date()) - BIRTH_YEAR) AS AGE
FROM RIDER
)
SELECT MEMBER_TYPE, AVG(AGE)
FROM MT_AGE
GROUP BY MEMBER_TYPE;

-- Find the stations where number of departures is higher than number of arrivals
WITH ARRIVALS AS
(
SELECT s.STATION_ID, COUNT(t.END_STATION_ID) AS NUM_ARR
FROM TRIP t
JOIN STATIONS s
ON s.STATION_ID = t.END_STATION_ID
GROUP BY s.STATION_ID
),
DEPARTURES AS
(
SELECT s2.STATION_ID , COUNT(t2.START_STATION_ID) AS NUM_DEP
FROM TRIP t2
JOIN STATIONS s2
ON s2.STATION_ID = t2.START_STATION_ID
GROUP BY s2.STATION_ID
)
SELECT d.STATION_ID, (NUM_DEP - NUM_ARR) AS TRIP_DIFF
FROM DEPARTURES d
JOIN ARRIVALS a
ON d.STATION_ID = a.STATION_ID
WHERE NUM_DEP > NUM_ARR;

-- Find the total distance covered grouped by member type and city
WITH MEMBER_CITY_DURATION AS
(
SELECT 
r.MEMBER_TYPE,
s.CITY,
SUM(t.DURATION_SECONDS) AS TOTAL_DURATION
FROM TRIP t
JOIN RIDER r
ON t.RIDER_ID = r.RIDER_ID
JOIN STATIONS s
ON t.START_STATION_ID = s.STATION_ID
GROUP BY r.MEMBER_TYPE, s.CITY
)
SELECT MEMBER_TYPE, CITY, TOTAL_DURATION
FROM MEMBER_CITY_DURATION
ORDER BY MEMBER_TYPE, CITY;

-- Find the average trip duration for each bike model
WITH DURATION_BIKE AS
(
SELECT b.MODEL, t.DURATION_SECONDS
FROM TRIP t
JOIN BIKES b
ON b.BIKE_ID = t.BIKE_ID
)
SELECT MODEL, AVG(DURATION_SECONDS) AS BIKE_AVG
FROM DURATION_BIKE
GROUP BY MODEL
ORDER BY BIKE_AVG DESC;

-- Find which bike has covered the highest distance for each city
WITH BIKE_DIST AS
(
SELECT s.CITY, t.BIKE_ID, SUM(t.DURATION_SECONDS) AS TOTAL_DISTANCE,
RANK() OVER(PARTITION BY s.CITY ORDER BY SUM(t.DURATION_SECONDS) DESC) AS rbd
FROM TRIP t 
JOIN STATIONS s
ON s.STATION_ID = t.START_STATION_ID
GROUP BY t.BIKE_ID, s.CITY
)
SELECT CITY, BIKE_ID, TOTAL_DISTANCE
FROM BIKE_DIST
WHERE rbd = 1;



